{"is_source_file": true, "format": "Dart", "description": "This Dart source file defines the ApiClient class responsible for managing HTTP API calls, including setting up Dio with base options, handling request interceptors for authentication, and implementing retry logic for transient errors.", "external_files": ["package:dio/dio.dart", "package:logger/logger.dart", "../config/env.dart", "../state/app_state.dart"], "external_methods": ["AppState.instance.currentToken", "Duration", "Future.delayed", "dio.fetch"], "published": ["ApiClient"], "classes": [{"name": "ApiClient", "description": "Provides methods to perform HTTP requests with automatic retries and authentication handling."}], "methods": [{"name": "ApiClient._internal", "description": "Private constructor used internally to instantiate ApiClient with a Dio instance."}, {"name": "ApiClient.factory", "description": "Factory constructor that creates and configures a Dio client with interceptors and timeout settings."}, {"name": "_shouldRetry", "description": "Static method that determines whether a request should be retried based on the DioException type and response status code."}], "calls": ["AppState.instance.currentToken", "Duration(seconds: 10)", "Duration(seconds: 20)", "Duration(milliseconds: 300 * retries)", "dio.fetch"], "search-terms": ["Dio client configuration", "Dart API client", "HTTP retry logic", "Authorization header interceptor", "DioException handling"], "state": 2, "file_id": 22, "knowledge_revision": 50, "git_revision": "", "hash": "e81b488ab027b290e848242e12ee1945", "format-version": 4, "code-base-name": "video_calling_app_frontend", "filename": "video_calling_app_frontend/lib/core/network/api_client.dart", "revision_history": [{"50": ""}]}